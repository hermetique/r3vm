;---r3 compiler code.asm;--------------------------; :onshow  e       calls:1 niv:1 len:17 [ a --  ]w47:;---------OPT;---------ANA; 0	; [ 0 ] ; '.exit	; [ 0 1 ] ; !	; [ 0 1 2 ] ; (	; [ 0 ] ; .exit	; [ 0 ] ; 0?	; [ 0 3 ] ; DROP	; [ 0 3 ] ; UPDATE	; [ 0 ] ; DUP	; [ 0 ] ; EX	; [ 0 0 ] ; REDRAW	; [ 0 ] ; )	; [ 0 ] ; 2DROP	; [ 0 3 ] ; 0	; [ ] ; '.exit	; [ 4 ] ; !	; [ 4 5 ] ; ;	; [ ] ; ---- cells ----; 0 R:0 W:1 A (0:13) 1; 1 R:0 W:0 U (1:3) 0; 2 R:0 W:0 U (2:3) 0; 3 R:1 W:0 U (5:15) 0; 4 R:0 W:0 U (14:16) 0; 5 R:0 W:0 U (15:16) 0;---------GEN; 0	; [ rax ] ; '.exit	; [ rax 0 ] ; !	; [ rax 0 w46 ] mov dword[w46],0; (	; [ rax ] _i1:; .exit	; [ rax ] ; 0?	; [ rax dword[w46] ] mov rbx,dword[w46]or rbx,rbxjnz _o1; DROP	; [ rax rbx ] ; UPDATE	; [ rax ] call SYSREDRAW; DUP	; [ rax ] ; EX	; [ rax rax ] mov rcx,raxcall rcx; REDRAW	; [ rax ] call SYSUPDATE; )	; [ rax ] jmp _i1_o1:; 2DROP	; [ rax dword[w46] ] ; 0	; [  ] ; '.exit	; [ 0 ] ; !	; [ 0 w46 ] mov dword[w46],0; ;	; [  ] lea rbp,[rbp-8]ret;--------------------------; :exit  e       calls:1 niv:0 len:4 [  --  ]w48:;---------OPT;---------ANA; 1	; [ ] ; '.exit	; [ 0 ] ; !	; [ 0 1 ] ; ;	; [ ] ; ---- cells ----; 0 R:0 W:0 U A (1:3) 0; 1 R:0 W:0 U (2:3) 0;---------GEN; 1	; [  ] ; '.exit	; [ 1 ] ; !	; [ 1 w46 ] mov dword[w46],1; ;	; [  ] ret;--------------------------; :colmix  l       calls:1 niv:0 len:34 [ abc -- d ]w52:;---------OPT;---------ANA; >R	; [ 0 1 2 ] ; DUP	; [ 0 1 ] ; $ff00ff	; [ 0 1 1 ] ; AND	; [ 0 1 1 3 ] ; PICK2	; [ 0 1 4 ] ; $ff00ff	; [ 0 1 4 0 ] ; AND	; [ 0 1 4 0 5 ] ; OVER	; [ 0 1 4 6 ] ; -	; [ 0 1 4 6 4 ] ; R@	; [ 0 1 4 7 ] ; *	; [ 0 1 4 7 2 ] ; 8	; [ 0 1 4 8 ] ; >>	; [ 0 1 4 8 9 ] ; +	; [ 0 1 4 A ] ; $ff00ff	; [ 0 1 B ] ; AND	; [ 0 1 B C ] ; ROT	; [ 0 1 D ] ; ROT	; [ 1 D 0 ] ; $ff00	; [ D 0 1 ] ; AND	; [ D 0 1 E ] ; SWAP	; [ D 0 F ] ; $ff00	; [ D F 0 ] ; AND	; [ D F 0 10 ] ; OVER	; [ D F 11 ] ; -	; [ D F 11 F ] ; R>	; [ D F 12 ] ; *	; [ D F 12 2 ] ; 8	; [ D F 13 ] ; >>	; [ D F 13 14 ] ; +	; [ D F 15 ] ; $ff00	; [ D 16 ] ; AND	; [ D 16 17 ] ; OR	; [ D 18 ] ; ;	; [ 19 ] ; ---- cells ----; 0 R:0 W:1 (0:23) 1; 1 R:0 W:1 U (0:20) 2; 2 R:0 W:1 (0:27) 3; 3 R:0 W:0 U (3:4) 0; 4 R:0 W:1 U (4:15) 4; 5 R:0 W:0 U (6:7) 0; 6 R:0 W:1 U (7:9) 5; 7 R:0 W:1 U (9:11) 5; 8 R:0 W:1 U (11:13) 5; 9 R:0 W:0 U (12:13) 0; A R:0 W:1 U (13:14) 5; B R:0 W:1 U (14:16) 5; C R:0 W:0 U (15:16) 0; D R:0 W:1 (16:33) 5; E R:0 W:0 U (19:20) 0; F R:0 W:1 (20:31) 4; 10 R:0 W:0 U (22:23) 0; 11 R:0 W:1 U (23:25) 2; 12 R:0 W:1 U (25:27) 2; 13 R:0 W:1 U (27:29) 2; 14 R:0 W:0 U (28:29) 0; 15 R:0 W:1 U (29:30) 2; 16 R:0 W:1 U (30:32) 2; 17 R:0 W:0 U (31:32) 0; 18 R:0 W:1 U (32:33) 2; 19 R:0 W:1 A (33:34) 2;---------GEN; >R	; [ qword[rbp-8] qword[rbp-4] rax ] push rax; DUP	; [ qword[rbp-8] qword[rbp-4] ] ; $ff00ff	; [ qword[rbp-8] qword[rbp-4] qword[rbp-4] ] mov r8d,16711935; AND	; [ qword[rbp-8] qword[rbp-4] qword[rbp-4] r8 ] mov rax,qword[rbp-4]and rax,r8; PICK2	; [ qword[rbp-8] rax rax ] ; $ff00ff	; [ qword[rbp-8] rax rax qword[rbp-8] ] mov r9d,16711935; AND	; [ qword[rbp-8] rax rax qword[rbp-8] r9 ] mov rax,qword[rbp-8]and rax,r9; OVER	; [ rax rax rax rax ] mov r9d,rax; -	; [ rax rax rax rax r9 ] sub rax,r9; R@	; [ rax rax rax rax ] mov r9d,raxmov r9,[esp]; *	; [ rax rax rax rax r9 ] imul rax,r9; 8	; [ rax rax rax rax ] ; >>	; [ rax rax rax rax 8 ] sar rax,8; +	; [ rax rax rax rax ] add rax,rax; $ff00ff	; [ rax rax rax ] mov r9d,16711935; AND	; [ rax rax rax r9 ] and rax,r9; ROT	; [ rax rax rax ] ; ROT	; [ rax rax rax ] ; $ff00	; [ rax rax rax ] mov r9d,65280; AND	; [ rax rax rax r9 ] and rax,r9; SWAP	; [ rax rax rax ] ; $ff00	; [ rax rax rax ] ; AND	; [ rax rax rax 65280 ] and rax,65280; OVER	; [ rax rax rax ] mov r9d,rax; -	; [ rax rax rax r9 ] sub rax,r9; R>	; [ rax rax rax ] pop rax; *	; [ rax rax rax rax ] imul rax,rax; 8	; [ rax rax rax ] mov r8d,8; >>	; [ rax rax rax r8 ] mov ecx,r8sar rax,rcx; +	; [ rax rax rax ] add rax,rax; $ff00	; [ rax rax ] ; AND	; [ rax rax 65280 ] and rax,65280; OR	; [ rax rax ] or rax,rax; ;	; [ rax ] lea rbp,[rbp-16]ret;--------------------------; :sminmax3  l       calls:1 niv:0 len:47 [ abc -- de ]w53:;---------OPT;---------ANA; DUP	; [ 0 1 2 ] ; DUP	; [ 0 1 2 2 ] ; 63	; [ 0 1 2 2 2 ] ; >>	; [ 0 1 2 2 2 3 ] ; DUP	; [ 0 1 2 2 4 ] ; NOT	; [ 0 1 2 2 4 4 ] ; ROT	; [ 0 1 2 2 4 5 ] ; AND	; [ 0 1 2 4 5 2 ] ; ROT	; [ 0 1 2 4 6 ] ; ROT	; [ 0 1 4 6 2 ] ; AND	; [ 0 1 6 2 4 ] ; ROT	; [ 0 1 6 7 ] ; DUP	; [ 0 6 7 1 ] ; DUP	; [ 0 6 7 1 1 ] ; 63	; [ 0 6 7 1 1 1 ] ; >>	; [ 0 6 7 1 1 1 8 ] ; DUP	; [ 0 6 7 1 1 9 ] ; NOT	; [ 0 6 7 1 1 9 9 ] ; ROT	; [ 0 6 7 1 1 9 A ] ; AND	; [ 0 6 7 1 9 A 1 ] ; ROT	; [ 0 6 7 1 9 B ] ; ROT	; [ 0 6 7 9 B 1 ] ; AND	; [ 0 6 7 B 1 9 ] ; ROT	; [ 0 6 7 B C ] ; +	; [ 0 6 B C 7 ] ; >R	; [ 0 6 B D ] ; +	; [ 0 6 B ] ; R>	; [ 0 E ] ; ROT	; [ 0 E D ] ; DUP	; [ E D 0 ] ; DUP	; [ E D 0 0 ] ; 63	; [ E D 0 0 0 ] ; >>	; [ E D 0 0 0 F ] ; DUP	; [ E D 0 0 10 ] ; NOT	; [ E D 0 0 10 10 ] ; ROT	; [ E D 0 0 10 11 ] ; AND	; [ E D 0 10 11 0 ] ; ROT	; [ E D 0 10 12 ] ; ROT	; [ E D 10 12 0 ] ; AND	; [ E D 12 0 10 ] ; ROT	; [ E D 12 13 ] ; +	; [ E 12 13 D ] ; >R	; [ E 12 14 ] ; +	; [ E 12 ] ; R>	; [ 15 ] ; SWAP	; [ 15 14 ] ; ;	; [ 14 15 ] ; ---- cells ----; 0 R:0 W:1 (0:41) 1; 1 R:0 W:1 U (0:23) 2; 2 R:0 W:1 U (0:11) 3; 3 R:0 W:0 U (3:4) 0; 4 R:0 W:1 U (4:11) 4; 5 R:0 W:1 U (6:8) 5; 6 R:0 W:1 U (8:27) 5; 7 R:0 W:1 U (11:25) 4; 8 R:0 W:0 U (15:16) 0; 9 R:0 W:1 U (16:23) 3; A R:0 W:1 U (18:20) 6; B R:0 W:1 U (20:27) 6; C R:0 W:1 U (23:25) 3; D R:0 W:1 (25:42) 3; E R:0 W:1 (27:44) 6; F R:0 W:0 U (32:33) 0; 10 R:0 W:1 (33:43) 4; 11 R:0 W:1 U (35:37) 5; 12 R:0 W:1 U (37:44) 5; 13 R:0 W:1 U (40:42) 2; 14 R:0 W:1 (42:47) 2; 15 R:0 W:1 A (44:47) 5;---------GEN; DUP	; [ qword[rbp-8] qword[rbp-4] rax ] ; DUP	; [ qword[rbp-8] qword[rbp-4] rax rax ] mov r8d,rax; 63	; [ qword[rbp-8] qword[rbp-4] rax rax r8 ] mov r9d,63; >>	; [ qword[rbp-8] qword[rbp-4] rax rax r8 r9 ] mov ecx,r9sar r8,rcx; DUP	; [ qword[rbp-8] qword[rbp-4] rax rax r8 ] mov r9d,r8; NOT	; [ qword[rbp-8] qword[rbp-4] rax rax r8 r9 ] not r9; ROT	; [ qword[rbp-8] qword[rbp-4] rax rax r8 r9 ] ; AND	; [ qword[rbp-8] qword[rbp-4] rax r8 r9 rax ] and r9,rax; ROT	; [ qword[rbp-8] qword[rbp-4] rax r8 r9 ] ; ROT	; [ qword[rbp-8] qword[rbp-4] r8 r9 rax ] ; AND	; [ qword[rbp-8] qword[rbp-4] r9 rax r8 ] and rax,r8; ROT	; [ qword[rbp-8] qword[rbp-4] r9 rax ] ; DUP	; [ qword[rbp-8] r9 rax qword[rbp-4] ] mov r8d,qword[rbp-4]; DUP	; [ qword[rbp-8] r9 rax qword[rbp-4] r8 ] ; 63	; [ qword[rbp-8] r9 rax qword[rbp-4] r8 r8 ] mov edx,63; >>	; [ qword[rbp-8] r9 rax qword[rbp-4] r8 r8 rdx ] mov ecx,rdxsar r8,rcx; DUP	; [ qword[rbp-8] r9 rax qword[rbp-4] r8 r8 ] mov r10d,r8; NOT	; [ qword[rbp-8] r9 rax qword[rbp-4] r8 r8 r10 ] not r10; ROT	; [ qword[rbp-8] r9 rax qword[rbp-4] r8 r8 r10 ] ; AND	; [ qword[rbp-8] r9 rax qword[rbp-4] r8 r10 r8 ] and r10,r8; ROT	; [ qword[rbp-8] r9 rax qword[rbp-4] r8 r10 ] ; ROT	; [ qword[rbp-8] r9 rax r8 r10 qword[rbp-4] ] ; AND	; [ qword[rbp-8] r9 rax r10 qword[rbp-4] r8 ] mov rbx,qword[rbp-4]and rbx,r8; ROT	; [ qword[rbp-8] r9 rax r10 rbx ] ; +	; [ qword[rbp-8] r9 r10 rbx rax ] add rbx,rax; >R	; [ qword[rbp-8] r9 r10 rbx ] push rbx; +	; [ qword[rbp-8] r9 r10 ] add r9,r10; R>	; [ qword[rbp-8] r9 ] mov r10d,r9pop r10; ROT	; [ qword[rbp-8] r9 r10 ] ; DUP	; [ r9 r10 qword[rbp-8] ] mov edx,qword[rbp-8]; DUP	; [ r9 r10 qword[rbp-8] rdx ] mov edx,rdx; 63	; [ r9 r10 qword[rbp-8] rdx rdx ] mov r10d,63; >>	; [ r9 r10 qword[rbp-8] rdx rdx r10 ] mov ecx,r10sar rdx,rcx; DUP	; [ r9 r10 qword[rbp-8] rdx rdx ] ; NOT	; [ r9 r10 qword[rbp-8] rdx rdx rdx ] not rdx; ROT	; [ r9 r10 qword[rbp-8] rdx rdx rdx ] ; AND	; [ r9 r10 qword[rbp-8] rdx rdx rdx ] and rdx,rdx; ROT	; [ r9 r10 qword[rbp-8] rdx rdx ] ; ROT	; [ r9 r10 rdx rdx qword[rbp-8] ] ; AND	; [ r9 r10 rdx qword[rbp-8] rdx ] mov rbx,qword[rbp-8]and rbx,rdx; ROT	; [ r9 r10 rdx rbx ] ; +	; [ r9 rdx rbx r10 ] add rbx,r10; >R	; [ r9 rdx rbx ] push rbx; +	; [ r9 rdx ] add r9,rdx; R>	; [ r9 ] mov r8d,r9pop r8; SWAP	; [ r9 r8 ] ; ;	; [ r8 r9 ] lea rbp,[rbp-8]mov qword[rbp-4],r8mov rax,r9ret;--------------------------; :patternxor  l'      calls:1 niv:1 len:40 [  --  ]w54:;---------OPT;---------ANA; 1	; [ ] ; 2	; [ 0 ] ; 3	; [ 0 1 ] ; sminmax3	; [ 0 1 2 ] ; 2DROP	; [ 3 4 ] ; VFRAME	; [ ] ; >A	; [ 5 ] ; SH	; [ ] ; (	; [ 6 ] ; 1?	; [ 6 ] ; 1	; [ 6 ] ; -	; [ 6 7 ] ; SW	; [ 8 ] ; (	; [ 8 9 ] ; 1?	; [ 8 9 ] ; 1	; [ 8 9 ] ; -	; [ 8 9 A ] ; 2DUP	; [ 8 B ] ; XOR	; [ 8 B 8 B ] ; MSEC	; [ 8 B C ] ; +	; [ 8 B C D ] ; 8	; [ 8 B E ] ; <<	; [ 8 B E F ] ; $ff0000	; [ 8 B 10 ] ; $ff	; [ 8 B 10 11 ] ; ROT	; [ 8 B 10 11 12 ] ; colmix	; [ 8 B 11 12 10 ] ; A!+	; [ 8 B 13 ] ; )	; [ 8 B ] ; DROP	; [ 8 9 ] ; )	; [ 8 ] ; DROP	; [ 8 9 ] ; KEY	; [ 8 ] ; 27	; [ 8 14 ] ; =?	; [ 8 14 15 ] ; (	; [ 8 14 ] ; exit	; [ 8 14 ] ; )	; [ 8 14 ] ; DROP	; [ 8 14 ] ; ;	; [ 8 ] ; ---- cells ----; 0 R:0 W:0 U (1:4) 0; 1 R:0 W:0 U (2:4) 0; 2 R:0 W:0 U (3:4) 0; 3 R:0 W:0 U (4:5) 0; 4 R:0 W:0 U (4:5) 0; 5 R:0 W:0 U (6:7) 0; 6 R:1 W:0 U (8:12) 0; 7 R:0 W:0 U (11:12) 0; 8 R:0 W:1 A (12:43) 1; 9 R:1 W:0 U (13:35) 0; A R:0 W:0 U (16:17) 0; B R:0 W:1 U (17:19) 2; C R:0 W:1 U (19:21) 2; D R:0 W:0 U (20:21) 0; E R:0 W:1 U (21:23) 2; F R:0 W:0 U (22:23) 0; 10 R:0 W:1 (23:27) 2; 11 R:0 W:0 U (24:27) 0; 12 R:0 W:0 U (25:27) 0; 13 R:0 W:0 U (27:28) 0; 14 R:1 W:0 U (33:39) 0; 15 R:1 W:0 U (34:35) 0;---------GEN; 1	; [  ] ; 2	; [ 1 ] ; 3	; [ 1 2 ] ; sminmax3	; [ 1 2 3 ] lea rbp,[rbp+24]mov qword[rbp-8],1mov qword[rbp-4],2mov rax,3call w53; 2DROP	; [ qword[rbp-4] rax ] ; VFRAME	; [  ] ; >A	; [ [SYSFRAME] ] mov esi,[SYSFRAME]; SH	; [  ] ; (	; [ YRES ] lea rbp,[rbp-8]mov rax,YRES_i6:; 1?	; [ rax ] or rax,raxjz _o6; 1	; [ rax ] ; -	; [ rax 1 ] sub rax,1; SW	; [ rax ] ; (	; [ rax XRES ] lea rbp,[rbp+8]mov qword[rbp-4],raxmov rax,XRES_i7:; 1?	; [ qword[rbp-4] rax ] or rax,raxjz _o7; 1	; [ qword[rbp-4] rax ] ; -	; [ qword[rbp-4] rax 1 ] sub rax,1; 2DUP	; [ qword[rbp-4] rax ] ; XOR	; [ qword[rbp-4] rax qword[rbp-4] rax ] xor qword[rbp-4],rax; MSEC	; [ qword[rbp-4] rax qword[rbp-4] ] call SYSMSEC; +	; [ qword[rbp-4] rax qword[rbp-4] ] add rax,qword[rbp-4]; 8	; [ qword[rbp-4] rax ] ; <<	; [ qword[rbp-4] rax 8 ] shl rax,8; $ff0000	; [ qword[rbp-4] rax ] mov ebx,16711680; $ff	; [ qword[rbp-4] rax rbx ] ; ROT	; [ qword[rbp-4] rax rbx 255 ] ; colmix	; [ qword[rbp-4] rbx 255 rax ] lea rbp,[rbp+16]mov qword[rbp-8],rbxmov qword[rbp-4],255call w52; A!+	; [ qword[rbp-4] rax ] mov [esi],raxadd esi,4; )	; [ qword[rbp-4] ] lea rbp,[rbp-8]mov rax,qword[rbp]jmp _i7_o7:; DROP	; [ qword[rbp-4] rax ] ; )	; [ qword[rbp-4] ] mov rax,qword[rbp-4]jmp _i6_o6:; DROP	; [ qword[rbp-4] rax ] ; KEY	; [ qword[rbp-4] ] ; 27	; [ qword[rbp-4] dword[SYSKEY] ] ; =?	; [ qword[rbp-4] dword[SYSKEY] 27 ] cmp dword[SYSKEY],27jne _o8; (	; [ qword[rbp-4] dword[SYSKEY] ] lea rbp,[rbp+8]mov qword[rbp-4],qword[rbp-8]mov rax,dword[SYSKEY]; exit	; [ qword[rbp-4] rax ] call w48; )	; [ qword[rbp-4] rax ] _o8:; DROP	; [ qword[rbp-4] rax ] ; ;	; [ qword[rbp-4] ] lea rbp,[rbp-8]mov rax,qword[rbp]ret;--------------------------; :  l       calls:1 niv:2 len:3 [  --  ]INICIO:;---------OPT;---------ANA; 'patternxor	; [ ] ; onshow	; [ 0 ] ; ;	; [ ] ; ---- cells ----; 0 R:0 W:0 U A (1:2) 0;---------GEN; 'patternxor	; [  ] ; onshow	; [ w54 ] lea rbp,[rbp+8]mov rax,w54jmp w47; ;	; [ rax ]  